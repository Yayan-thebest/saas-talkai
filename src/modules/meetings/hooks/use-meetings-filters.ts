
import { DEFAULT_PAGE } from "@/constants";
import { parseAsInteger, parseAsString, parseAsStringEnum, useQueryStates } from "nuqs";
import { MeetingStatus } from "../types";


/**
 * âœ… Quâ€™est-ce que Nuqs ?
Nuqs est une bibliothÃ¨que qui permet de synchroniser automatiquement un Ã©tat (useState) avec les paramÃ¨tres dâ€™URL (searchParams) dans une application Next.js.

ðŸ”„ Fonctionnement (Two-way binding)
Si lâ€™utilisateur tape 123 dans un champ de recherche, lâ€™URL devient :
localhost:3000?search=123
Si lâ€™utilisateur modifie manuellement lâ€™URL (ex. ?search=hello), le champ de recherche affiche automatiquement hello.

ðŸ”’ Protection de certains paramÃ¨tres
Nuqs permet aussi de protÃ©ger certains paramÃ¨tres de lâ€™URL contre la modification par lâ€™utilisateur.
Exemple :
url
localhost:3000?search=hello&pageSize=10
â†’ Tu peux empÃªcher la modification de pageSize.
 */
export const useMeetingsFilters = () => {
    return useQueryStates({
       search: parseAsString.withDefault("").withOptions({clearOnDefault: true}),
       page: parseAsInteger.withDefault(DEFAULT_PAGE).withOptions({clearOnDefault: true}),
       status: parseAsStringEnum(Object.values(MeetingStatus)),
       agentId: parseAsString.withDefault("").withOptions({ clearOnDefault: true})
    });
};

